<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="204.66302mm"
   height="9.1130295mm"
   viewBox="0 0 204.66302 9.1130295"
   stroke-linejoin="round"
   stroke-linecap="round"
   fill="none"
   fill-rule="evenodd"
   version="1.1"
   id="svg3550"
   sodipodi:docname="MASTER_micron_manual_extrusions_main.svg"
   inkscape:version="1.2.2 (732a01da63, 2022-12-09)"
   xml:space="preserve"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview3552"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     showgrid="false"
     showguides="true"
     inkscape:zoom="0.70710678"
     inkscape:cx="108.18734"
     inkscape:cy="405.87929"
     inkscape:window-width="1920"
     inkscape:window-height="1017"
     inkscape:window-x="1912"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" /><desc
     id="desc1905">Composer Export</desc><script
     type="text/ecmascript"
     id="script1907"><![CDATA[
if(typeof(top) != "undefined")
{
	top.ShowPaper = ShowPaper;
}
function ShowHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity",".5");
}
function HideHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity","0");

	var toolTip = svgDocument.getElementById('ToolTip');
	if(toolTip)
		toolTip.setAttribute("visibility","hidden");
}
function ShowToolTip(evt,hotspotid,strTooltip)
{
	if(strTooltip=="")
	return;

	// change text
	var svgDocument = evt.target.ownerDocument;
	var tiptext = svgDocument.getElementById('ToolTipText');
	if( !tiptext )
	return;
	tiptext.firstChild.nodeValue = " " + strTooltip + "  " ;

	// show tooltip before, else some refresh issue

	var toolTip = svgDocument.getElementById('ToolTip');
	if(!toolTip)
	return;

	toolTip.setAttribute("visibility","visible");
	toolTip.setAttribute("opacity",".95");

	// move tooltip
	// get viewbox

	var root = svgDocument.documentElement;
	var vbox = (root.getAttribute("viewBox")).split(' ');
	var x0 = parseFloat(vbox[0]);
	var y0 = parseFloat(vbox[1]);
	var vboxW = parseFloat(vbox[2]);
	var vboxH = parseFloat(vbox[3]);

	// get default width of svg

	var strW = root.getAttribute("width");
	var svgW = parseFloat(strW);
	if(strW.indexOf('mm') != -1)
	svgW *= 3.779;

	var strH = root.getAttribute("height");
	var svgH = parseFloat(strH);
	if(strH.indexOf('mm') != -1)
	svgH *= 3.779;  	// 96 dpi  -> 96/25.4 = 3.779

	// update the viewbox / width / height if svg is embedded in html with zoom fit all
	var realx0 = x0;
	var realy0 = y0;
	var realvboxW = vboxW;
	var realvboxH = vboxH;
	var realsvgW = svgW;
	var realsvgH = svgH;

	if ((typeof(top) == "undefined") || (typeof(top.svgctl1) != "undefined")) // embedded in html
	{
		// get window size in pxl

		svgW = window.innerWidth;
		svgH = window.innerHeight;

		// calculate real viewbox

		realsvgW = svgW;
		realsvgH = svgH;
		if((svgW / svgH) > (vboxW / vboxH))
		{
			realvboxW = (vboxH * svgW) / svgH;
			realvboxH = vboxH;
			realx0 = x0 - (realvboxW - vboxW)/2 ;
		}
		else
		{
			realvboxH = (vboxW * svgH) / svgW;
			realvboxW = vboxW;
			realy0 = y0 - (realvboxH - vboxH)/2 ;
		}
	}

	// get user zoom/pan

	var newScale = root.currentScale;
	var translation = root.currentTranslate;

	// transform pxl to user unit

	var xPos = (((evt.clientX+10- translation.x)/newScale) * realvboxW)/realsvgW  + realx0 ;
	var yPos = (((evt.clientY+5- translation.y)/newScale) * realvboxH)/ realsvgH  + realy0 ;
	var scaleForWidth = ( (1 / newScale) * realvboxH) / realsvgH;

	// move tooltip

	toolTip.setAttribute("transform", "translate(" + xPos + "," + yPos + ")" );

	// resize tooltip

	var fontsize = 12;
	tiptext.setAttribute("font-size",fontsize*scaleForWidth);
	tiptext.setAttribute("y", fontsize*scaleForWidth);
	var tipBG = svgDocument.getElementById('ToolTipBG');
	var outline = tiptext.getBBox();
	if(tipBG)
	{
		tipBG.setAttribute("stroke-width", 1*scaleForWidth);
		tipBG.setAttribute("width", Number(outline.width) );
		tipBG.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
	}
	var ToolTipShadow = svgDocument.getElementById('ToolTipShadow');
	if(ToolTipShadow)
	{
		ToolTipShadow.setAttribute("width", Number(outline.width) );
		ToolTipShadow.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
		ToolTipShadow.setAttribute("x", 3*scaleForWidth);
		ToolTipShadow.setAttribute("y", 3*scaleForWidth);
	}
}
function ShowPaper()
{
  var svgDocument = getDocument();
  var paper = svgDocument.getElementById("paperID");
  if(paper)
  {
    paper.setAttribute("transform","scale(1)");
    paper.setAttribute("opacity","1");
    paper.setAttribute("visibility","visible");
  }
  var svg = svgDocument.getRootElement();
  if(svg)
  {
    svg.setAttribute("width","307.000mm");
    svg.setAttribute("height","220.000mm");
    svg.setAttribute("viewBox","-5.000000 -5.000000 307.000000 220.000000");
  }
}
]]></script><defs
     id="defs1909" /><g
     inkscape:groupmode="layer"
     id="layer1"
     inkscape:label="Fixed"
     style="fill:none;fill-opacity:1"
     transform="translate(33.921325,-101.01844)"><g
       id="Actor_.7-0-7-4"
       style="display:inline;fill:#787878;fill-opacity:1;stroke-width:0.353;stroke-dasharray:none"
       transform="rotate(90,61.110187,112.84495)"
       inkscape:export-filename="micron_manual_extrusions_A.svg"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><g
         style="display:inline;fill:#787878;fill-opacity:1;stroke:#000000;stroke-width:0.353;stroke-linejoin:miter;stroke-dasharray:none"
         id="g3184-8-9-0"><path
           id="path3182"
           style="display:inline;fill:#787878;fill-opacity:1;stroke:#000000;stroke-width:0.353;stroke-linejoin:miter;stroke-dasharray:none"
           d="m 54.71,3.39 4e-6,3.7681917 m 1e-6,1.2526368 1.9e-4,194.2217315 m 1e-6,1.37046 4e-6,3.69692 M 52.9602,3.3900131 c 0,0 3.1e-4,1.2888141 8.56e-4,3.6617251 m 3.37e-4,1.4717443 c 0.0065,28.3456215 0.03607,165.4811375 0.01084,193.9933175 m -0.0016,1.56683 c -0.0059,1.17734 0.0021,2.49561 -0.01046,3.61633 m -3.499999,-2e-5 c 0.875406,0 0.875406,0 0,0 0.797838,0 0.797838,0 0,0 0.797838,0 0.797838,0 0,0 V 3.3900131 M 58.220199,207.69994 V 3.3900131 M 49.4602,3.3899463 V 207.69996 h 8.759674 V 3.3899463 Z m 4.331002,3.3258952 c 0.619954,-1.762e-4 1.122693,0.4785005 1.122929,1.0691854 6.3e-5,0.5908866 -0.502763,1.0698783 -1.122929,1.0697021 -0.619964,-9.59e-5 -1.122475,-0.4790079 -1.122412,-1.0697021 2.36e-4,-0.5904925 0.50266,-1.0690896 1.122412,-1.0691854 z M 53.83461,202.24913 c 0.620166,-1.8e-4 1.122991,0.47881 1.122929,1.0697 -2.4e-4,0.59068 -0.502976,1.06936 -1.122929,1.06918 -0.619751,-1e-4 -1.122172,-0.47869 -1.122412,-1.06918 -6.2e-5,-0.59069 0.502448,-1.0696 1.122412,-1.0697 z"
           sodipodi:nodetypes="cccccccccccccccccccccccccccccccccc" /></g></g></g></svg>
