<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="16.614017mm"
   height="205.31737mm"
   viewBox="0 0 16.614017 205.31737"
   stroke-linejoin="round"
   stroke-linecap="round"
   fill="none"
   fill-rule="evenodd"
   version="1.1"
   id="svg3550"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <desc
     id="desc1905">Composer Export</desc>
  <script
     type="text/ecmascript"
     id="script1907"><![CDATA[
if(typeof(top) != "undefined")
{
	top.ShowPaper = ShowPaper;
}
function ShowHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity",".5");
}
function HideHotSpot(evt,hotspotid)
{
	var svgDocument = evt.target.ownerDocument;
	var strId = "hotspot."+hotspotid;
	var hotspot = svgDocument.getElementById(strId);
	if(hotspot)
		hotspot.setAttribute("opacity","0");

	var toolTip = svgDocument.getElementById('ToolTip');
	if(toolTip)
		toolTip.setAttribute("visibility","hidden");
}
function ShowToolTip(evt,hotspotid,strTooltip)
{
	if(strTooltip=="")
	return;

	// change text
	var svgDocument = evt.target.ownerDocument;
	var tiptext = svgDocument.getElementById('ToolTipText');
	if( !tiptext )
	return;
	tiptext.firstChild.nodeValue = " " + strTooltip + "  " ;

	// show tooltip before, else some refresh issue

	var toolTip = svgDocument.getElementById('ToolTip');
	if(!toolTip)
	return;

	toolTip.setAttribute("visibility","visible");
	toolTip.setAttribute("opacity",".95");

	// move tooltip
	// get viewbox

	var root = svgDocument.documentElement;
	var vbox = (root.getAttribute("viewBox")).split(' ');
	var x0 = parseFloat(vbox[0]);
	var y0 = parseFloat(vbox[1]);
	var vboxW = parseFloat(vbox[2]);
	var vboxH = parseFloat(vbox[3]);

	// get default width of svg

	var strW = root.getAttribute("width");
	var svgW = parseFloat(strW);
	if(strW.indexOf('mm') != -1)
	svgW *= 3.779;

	var strH = root.getAttribute("height");
	var svgH = parseFloat(strH);
	if(strH.indexOf('mm') != -1)
	svgH *= 3.779;  	// 96 dpi  -> 96/25.4 = 3.779

	// update the viewbox / width / height if svg is embedded in html with zoom fit all
	var realx0 = x0;
	var realy0 = y0;
	var realvboxW = vboxW;
	var realvboxH = vboxH;
	var realsvgW = svgW;
	var realsvgH = svgH;

	if ((typeof(top) == "undefined") || (typeof(top.svgctl1) != "undefined")) // embedded in html
	{
		// get window size in pxl

		svgW = window.innerWidth;
		svgH = window.innerHeight;

		// calculate real viewbox

		realsvgW = svgW;
		realsvgH = svgH;
		if((svgW / svgH) > (vboxW / vboxH))
		{
			realvboxW = (vboxH * svgW) / svgH;
			realvboxH = vboxH;
			realx0 = x0 - (realvboxW - vboxW)/2 ;
		}
		else
		{
			realvboxH = (vboxW * svgH) / svgW;
			realvboxW = vboxW;
			realy0 = y0 - (realvboxH - vboxH)/2 ;
		}
	}

	// get user zoom/pan

	var newScale = root.currentScale;
	var translation = root.currentTranslate;

	// transform pxl to user unit

	var xPos = (((evt.clientX+10- translation.x)/newScale) * realvboxW)/realsvgW  + realx0 ;
	var yPos = (((evt.clientY+5- translation.y)/newScale) * realvboxH)/ realsvgH  + realy0 ;
	var scaleForWidth = ( (1 / newScale) * realvboxH) / realsvgH;

	// move tooltip

	toolTip.setAttribute("transform", "translate(" + xPos + "," + yPos + ")" );

	// resize tooltip

	var fontsize = 12;
	tiptext.setAttribute("font-size",fontsize*scaleForWidth);
	tiptext.setAttribute("y", fontsize*scaleForWidth);
	var tipBG = svgDocument.getElementById('ToolTipBG');
	var outline = tiptext.getBBox();
	if(tipBG)
	{
		tipBG.setAttribute("stroke-width", 1*scaleForWidth);
		tipBG.setAttribute("width", Number(outline.width) );
		tipBG.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
	}
	var ToolTipShadow = svgDocument.getElementById('ToolTipShadow');
	if(ToolTipShadow)
	{
		ToolTipShadow.setAttribute("width", Number(outline.width) );
		ToolTipShadow.setAttribute("height", Number(outline.height) + fontsize*.5*scaleForWidth );
		ToolTipShadow.setAttribute("x", 3*scaleForWidth);
		ToolTipShadow.setAttribute("y", 3*scaleForWidth);
	}
}
function ShowPaper()
{
  var svgDocument = getDocument();
  var paper = svgDocument.getElementById("paperID");
  if(paper)
  {
    paper.setAttribute("transform","scale(1)");
    paper.setAttribute("opacity","1");
    paper.setAttribute("visibility","visible");
  }
  var svg = svgDocument.getRootElement();
  if(svg)
  {
    svg.setAttribute("width","307.000mm");
    svg.setAttribute("height","220.000mm");
    svg.setAttribute("viewBox","-5.000000 -5.000000 307.000000 220.000000");
  }
}
]]></script>
  <defs
     id="defs1909">
    <linearGradient
       id="linearGradient1633">
      <stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop1631" />
    </linearGradient>
    <rect
       x="-111.36932"
       y="350.72495"
       width="111.36932"
       height="46.348011"
       id="rect1019" />
    <linearGradient
       xlink:href="#linearGradient1633"
       id="linearGradient1635"
       x1="130.95129"
       y1="77.579865"
       x2="135.2347"
       y2="77.579865"
       gradientUnits="userSpaceOnUse" />
    <linearGradient
       xlink:href="#linearGradient1633"
       id="linearGradient2005"
       gradientUnits="userSpaceOnUse"
       x1="130.95129"
       y1="77.579865"
       x2="135.2347"
       y2="77.579865" />
  </defs>
  <g
     id="layer2"
     transform="translate(-2.3405208,-2.9740062)">
    <g
       id="g219"
       transform="matrix(0.99920446,0,0,1.2197205,-124.95973,-12.90618)"
       style="display:inline;fill:none;fill-opacity:1;stroke-width:0.365952;stroke-dasharray:none">
      <g
         id="g1739"
         style="stroke-width:0.637698;stroke-dasharray:none">
        <g
           id="g193"
           transform="matrix(1,0,0,1.0176853,0,-0.23473684)"
           style="stroke-width:0.632133;stroke-dasharray:none">
          <path
             style="stroke:#808080;stroke-width:0.632133;stroke-dasharray:none;stroke-opacity:0.98"
             d="M 133.16,13.34 V 78.9"
             id="path191" />
        </g>
        <g
           id="g197"
           style="stroke-width:0.637698;stroke-dasharray:none">
          <path
             style="stroke:#808080;stroke-width:0.637698;stroke-dasharray:none;stroke-opacity:0.98"
             d="m 133.16,13.34 h 10.55"
             id="path195" />
        </g>
        <g
           id="g201"
           transform="matrix(1,0,0,1.2671014,0,-48.365918)"
           style="stroke-width:0.566513;stroke-dasharray:none">
          <path
             style="stroke:#808080;stroke-width:0.566513;stroke-dasharray:none;stroke-opacity:0.98"
             d="M 133.16,181.01 V 115.12"
             id="path199" />
        </g>
        <g
           id="g205"
           style="stroke-width:0.637698;stroke-dasharray:none">
          <path
             style="stroke:#808080;stroke-width:0.637698;stroke-dasharray:none;stroke-opacity:0.98"
             d="M 143.71,181.01 H 133.16"
             id="path203" />
        </g>
        <g
           id="g209"
           style="stroke-width:0.637698;stroke-dasharray:none">
          <path
             style="fill:#808080;fill-opacity:0.98;stroke-width:0.637698;stroke-dasharray:none"
             d="m 134.85,16.72 h -3.38 l 1.69,-3.38 z"
             id="path207" />
        </g>
        <g
           id="g213"
           style="stroke-width:0.637698;stroke-dasharray:none">
          <path
             style="fill:#808080;fill-opacity:0.98;stroke-width:0.637698;stroke-dasharray:none"
             d="m 131.47,177.62 h 3.38 l -1.69,3.39 z"
             id="path211" />
        </g>
      </g>
      <rect
         style="display:inline;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.365952;stroke-linecap:round;stroke-dasharray:none;stroke-opacity:1"
         id="rect1689"
         width="12.146025"
         height="19.892195"
         x="127.4016"
         y="79.613602" />
      <g
         id="g217"
         transform="matrix(1,0,0,0.64554532,0,39.478378)"
         style="fill:url(#linearGradient1635);fill-opacity:1;stroke:#000000;stroke-width:0.455471;stroke-dasharray:none;stroke-opacity:1">
        <text
           xml:space="preserve"
           transform="matrix(0,-0.33602797,0.26479399,0,37.340012,52.590859)"
           id="text1017"
           style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:21.1962px;font-family:Nunito;-inkscape-font-specification:'Nunito, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;white-space:pre;shape-inside:url(#rect1019);fill:url(#linearGradient2005);fill-opacity:1;stroke:#000000;stroke-width:1.52693;stroke-linecap:round;stroke-dasharray:none;stroke-opacity:1"><tspan
             x="-111.36914"
             y="369.08481"
             id="tspan2036">350mm</tspan></text>
      </g>
    </g>
  </g>
</svg>
